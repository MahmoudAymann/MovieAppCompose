name: Android CD Debug

# Trigger the workflow manually or on a specific event
on:
  workflow_dispatch: # Allows you to trigger the workflow manually from GitHub Actions tab
  push:
    tags:
      - 'debug-*' # Trigger on tags prefixed with 'debug-' like debug-1.0, debug-2.1, etc.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Build the debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # Deploy debug APK to Firebase App Distribution
      - name: Deploy Debug APK to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > firebase_service_account.json
          ./gradlew appDistributionUploadDebug --serviceCredentialsFile=firebase_service_account.json --app "${{ secrets.FIREBASE_APP_ID }}" --releaseNotes "Automated GitHub deployment for Debug" --groups "testers"
